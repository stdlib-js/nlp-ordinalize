{
  "version": 3,
  "sources": ["../lib/validate.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar indexOf = require( '@stdlib/utils-index-of' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar LANGUAGE_CODES = [ 'en', 'es', 'fin', 'fr', 'de', 'it', 'pt', 'swe' ];\nvar GRAMMATICAL_GENDERS = [ 'masculine', 'feminine' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lang] - language code\n* @param {boolean} [options.suffixOnly] - boolean indicating whether to only return the suffix\n* @param {string} [options.gender] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lang': 'es'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lang' ) ) {\n\t\topts.lang = options.lang;\n\t\tif ( indexOf( LANGUAGE_CODES, opts.lang ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'lang', LANGUAGE_CODES.join( '\", \"' ), opts.lang ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'suffixOnly' ) ) {\n\t\topts.suffixOnly = options.suffixOnly;\n\t\tif ( !isBoolean( opts.suffixOnly ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'suffixOnly', opts.suffixOnly ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'gender' ) ) {\n\t\topts.gender = options.gender;\n\t\tif ( indexOf( GRAMMATICAL_GENDERS, opts.gender ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'gender', GRAMMATICAL_GENDERS.join( '\", \"' ), opts.gender ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Converts an integer to an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @param {(string|integer)} value - string or number to convert\n* @param {Object} [options] - options\n* @param {boolean} [options.suffixOnly=false] - boolean indicating whether to return only the suffix\n* @param {string} [options.lang='en'] - language code\n* @param {string} [options.gender='masculine'] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @throws {TypeError} must provide a string or integer\n* @returns {string} ordinal string or suffix\n*\n* @example\n* var out = ordinalize( '1' );\n* // returns '1st'\n*\n* @example\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* @example\n* var out = ordinalize( '21' );\n* // returns '21st'\n*\n* @example\n* var out = ordinalize( '1', { 'lang': 'de' } );\n* // returns '1.'\n*\n* @example\n* var out = ordinalize( '7', { 'lang': 'es' } );\n* // returns '7\u00BA'\n*/\nfunction ordinalize( value, options ) {\n\tvar suffix;\n\tvar last2;\n\tvar last;\n\tvar opts;\n\tvar err;\n\n\tif ( !isString( value ) && !isInteger( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or integer. Value: `%s`.', value ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tvalue = String( value );\n\tlast = value[ value.length-1 ];\n\tlast2 = value.slice( -2 );\n\n\tswitch ( opts.lang ) {\n\tcase 'fr':\n\t\tif ( value === '1' ) {\n\t\t\tsuffix = ( opts.gender === 'feminine' ) ? 're' : 'er';\n\t\t} else {\n\t\t\tsuffix = 'e';\n\t\t}\n\t\tbreak;\n\tcase 'de':\n\tcase 'fin':\n\t\tsuffix = '.';\n\t\tbreak;\n\tcase 'it':\n\tcase 'pt':\n\tcase 'es':\n\t\tif ( opts.gender === 'feminine' ) {\n\t\t\tsuffix = '\u00AA';\n\t\t} else {\n\t\t\tsuffix = '\u00BA';\n\t\t}\n\t\tbreak;\n\tcase 'swe':\n\t\tif ( ( last2 !== '11' && last === '1' ) || ( last2 !== '12' && last === '2' ) ) {\n\t\t\tsuffix = ':a';\n\t\t} else {\n\t\t\tsuffix = ':e';\n\t\t}\n\t\tbreak;\n\tcase 'en':\n\tdefault:\n\t\tif ( last2 !== '11' && last === '1' ) {\n\t\t\tsuffix = 'st';\n\t\t} else if ( last2 !== '12' && last === '2' ) {\n\t\t\tsuffix = 'nd';\n\t\t} else if ( last2 !== '13' && last === '3' ) {\n\t\t\tsuffix = 'rd';\n\t\t} else {\n\t\t\tsuffix = 'th';\n\t\t}\n\t}\n\tif ( opts.suffixOnly ) {\n\t\treturn suffix;\n\t}\n\treturn value + suffix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ordinalize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an integer to an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @module @stdlib/nlp-ordinalize\n*\n* @example\n* var ordinalize = require( '@stdlib/nlp-ordinalize' );\n*\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* out = ordinalize( '12' );\n* // returns '12th'\n*\n* out = ordinalize( '7', {\n*     'suffixOnly': true\n* });\n* // returns 'th'\n*\n* out = ordinalize( '3', {\n*     'lang': 'de'\n* });\n* // returns '3.'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAa,QAAS,iCAAkC,EACxDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAU,QAAS,wBAAyB,EAC5CC,EAAS,QAAS,uBAAwB,EAK1CC,EAAiB,CAAE,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,EACpEC,EAAsB,CAAE,YAAa,UAAW,EA0BpD,SAASC,EAAUC,EAAMC,EAAU,CAClC,OAAMT,EAAeS,CAAQ,EAGxBR,EAAYQ,EAAS,MAAO,IAChCD,EAAK,KAAOC,EAAQ,KACfN,EAASE,EAAgBG,EAAK,IAAK,IAAM,IACtC,IAAI,UAAWJ,EAAQ,+EAAgF,OAAQC,EAAe,KAAM,MAAO,EAAGG,EAAK,IAAK,CAAE,EAG9JP,EAAYQ,EAAS,YAAa,IACtCD,EAAK,WAAaC,EAAQ,WACrB,CAACP,EAAWM,EAAK,UAAW,GACzB,IAAI,UAAWJ,EAAQ,+DAAgE,aAAcI,EAAK,UAAW,CAAE,EAG3HP,EAAYQ,EAAS,QAAS,IAClCD,EAAK,OAASC,EAAQ,OACjBN,EAASG,EAAqBE,EAAK,MAAO,IAAM,IAC7C,IAAI,UAAWJ,EAAQ,+EAAgF,SAAUE,EAAoB,KAAM,MAAO,EAAGE,EAAK,MAAO,CAAE,EAGrK,KApBC,IAAI,UAAWJ,EAAQ,qEAAsEK,CAAQ,CAAE,CAqBhH,CAKAV,EAAO,QAAUQ,ICtFjB,IAAAG,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAW,IAoCf,SAASC,EAAYC,EAAOC,EAAU,CACrC,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,CAACV,EAAUI,CAAM,GAAK,CAACL,EAAWK,CAAM,EAC5C,MAAM,IAAI,UAAWH,EAAQ,6EAA8EG,CAAM,CAAE,EAGpH,GADAK,EAAO,CAAC,EACH,UAAU,OAAS,IACvBC,EAAMR,EAAUO,EAAMJ,CAAQ,EACzBK,GACJ,MAAMA,EAOR,OAJAN,EAAQ,OAAQA,CAAM,EACtBI,EAAOJ,EAAOA,EAAM,OAAO,CAAE,EAC7BG,EAAQH,EAAM,MAAO,EAAG,EAEfK,EAAK,KAAO,CACrB,IAAK,KACCL,IAAU,IACdE,EAAWG,EAAK,SAAW,WAAe,KAAO,KAEjDH,EAAS,IAEV,MACD,IAAK,KACL,IAAK,MACJA,EAAS,IACT,MACD,IAAK,KACL,IAAK,KACL,IAAK,KACCG,EAAK,SAAW,WACpBH,EAAS,OAETA,EAAS,OAEV,MACD,IAAK,MACGC,IAAU,MAAQC,IAAS,KAAWD,IAAU,MAAQC,IAAS,IACvEF,EAAS,KAETA,EAAS,KAEV,MACD,IAAK,KACL,QACMC,IAAU,MAAQC,IAAS,IAC/BF,EAAS,KACEC,IAAU,MAAQC,IAAS,IACtCF,EAAS,KACEC,IAAU,MAAQC,IAAS,IACtCF,EAAS,KAETA,EAAS,IAEX,CACA,OAAKG,EAAK,WACFH,EAEDF,EAAQE,CAChB,CAKAR,EAAO,QAAUK,ICpFjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isBoolean", "indexOf", "format", "LANGUAGE_CODES", "GRAMMATICAL_GENDERS", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "isInteger", "isString", "format", "validate", "ordinalize", "value", "options", "suffix", "last2", "last", "opts", "err", "main"]
}
