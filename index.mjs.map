{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar indexOf = require( '@stdlib/utils-index-of' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// VARIABLES //\n\nvar LANGUAGE_CODES = [\n\t'en', 'es', 'fin', 'fr', 'de', 'it', 'pt', 'swe'\n];\nvar GRAMMATICAL_GENDERS = [\n\t'masculine',\n\t'feminine'\n];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lang] - language code\n* @param {boolean} [options.suffixOnly] - boolean indicating whether to only return the suffix\n* @param {string} [options.gender='masculine'] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lang': 'es'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'null2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lang' ) ) {\n\t\topts.lang = options.lang;\n\t\tif ( indexOf( LANGUAGE_CODES, opts.lang ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'lang', LANGUAGE_CODES.join( '\", \"' ), opts.lang ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'suffixOnly' ) ) {\n\t\topts.suffixOnly = options.suffixOnly;\n\t\tif ( !isBoolean( opts.suffixOnly ) ) {\n\t\t\treturn new TypeError( format( 'null30', 'suffixOnly', opts.suffixOnly ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'gender' ) ) {\n\t\topts.gender = options.gender;\n\t\tif ( indexOf( GRAMMATICAL_GENDERS, opts.gender ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'gender', GRAMMATICAL_GENDERS.join( '\", \"' ), opts.gender ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar isInteger = require( '@stdlib/assert-is-integer' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Turns an integer into an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @param {(string|integer)} value - string or number to convert\n* @param {Object} [options] - options\n* @param {boolean} [options.suffixOnly=false] - boolean indicating whether to return only the suffix\n* @param {string} [options.lang='en'] - language code\n* @param {string} [options.gender='masculine'] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @throws {TypeError} must provide a string or integer\n* @returns {string} ordinal string or suffix\n*\n* @example\n* var out = ordinalize( '1' );\n* // returns '1st'\n*\n* @example\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* @example\n* var out = ordinalize( '21' );\n* // returns '21st'\n*\n* @example\n* var out = ordinalize( '1', { 'lang': 'de' } );\n* // returns '1.'\n*\n* @example\n* var out = ordinalize( '7', { 'lang': 'es' } );\n* // returns '7ª'\n*/\nfunction ordinalize( value, options ) {\n\tvar lastTwoDigits;\n\tvar lastDigit;\n\tvar suffix;\n\tvar opts;\n\tvar err;\n\n\tif ( !isString( value ) && !isInteger( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or integer. Value: %s.', value ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tvalue = String( value );\n\tlastDigit = value[ value.length-1 ];\n\tlastTwoDigits = value.slice( -2 );\n\n\tswitch ( opts.lang ) {\n\tcase 'fr':\n\t\tif ( value === '1' ) {\n\t\t\tsuffix = opts.gender === 'feminine' ? 're' : 'er';\n\t\t}\n\t\telse {\n\t\t\tsuffix = 'e';\n\t\t}\n\t\tbreak;\n\tcase 'de':\n\tcase 'fin':\n\t\tsuffix = '.';\n\t\tbreak;\n\tcase 'it':\n\tcase 'pt':\n\tcase 'es':\n\t\tif ( opts.gender === 'feminine' ) {\n\t\t\tsuffix = 'ª';\n\t\t} else {\n\t\t\tsuffix = 'º';\n\t\t}\n\t\tbreak;\n\tcase 'swe':\n\t\tif (\n\t\t\t( lastTwoDigits !== '11' && lastDigit === '1' ) ||\n\t\t\t( lastTwoDigits !== '12' && lastDigit === '2' ) )\n\t\t{\n\t\t\tsuffix = ':a';\n\t\t}\n\t\telse {\n\t\t\tsuffix = ':e';\n\t\t}\n\t\tbreak;\n\tcase 'en':\n\tdefault:\n\t\tif ( lastTwoDigits !== '11' && lastDigit === '1' ) {\n\t\t\tsuffix = 'st';\n\t\t}\n\t\telse if ( lastTwoDigits !== '12' && lastDigit === '2' ) {\n\t\t\tsuffix = 'nd';\n\t\t}\n\t\telse if ( lastTwoDigits !== '13' && lastDigit === '3' ) {\n\t\t\tsuffix = 'rd';\n\t\t}\n\t\telse {\n\t\t\tsuffix = 'th';\n\t\t}\n\t}\n\tif ( opts.suffixOnly ) {\n\t\treturn suffix;\n\t}\n\treturn value + suffix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ordinalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Turn an integer into an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @module @stdlib/nlp-ordinalize\n*\n* @example\n* var ordinalize = require( '@stdlib/nlp-ordinalize' );\n*\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* out = ordinalize( '12' );\n* // returns '12th'\n*\n* out = ordinalize( '7', {\n*     'suffixOnly': true\n* });\n* // returns 'th'\n*\n* out = ordinalize( '3', {\n*     'lang': 'de'\n* });\n* // returns '3.'\n*/\n\n// MODULES //\n\nvar ordinalize = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ordinalize;\n"],"names":["isPlainObject","require$$0","hasOwnProp","require$$1","isBoolean","require$$2","isPrimitive","indexOf","require$$3","format","require$$4","LANGUAGE_CODES","GRAMMATICAL_GENDERS","validate_1","opts","options","lang","TypeError","join","suffixOnly","gender","isString","isInteger","validate","lib","value","lastTwoDigits","lastDigit","suffix","err","arguments","length","String","slice"],"mappings":";;+lBAsBA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAYC,EAAuCC,YACnDC,EAAUC,EACVC,EAASC,EAKTC,EAAiB,CACpB,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,OAExCC,EAAsB,CACzB,YACA,YAuDD,IAAAC,EA5BA,SAAmBC,EAAMC,GACxB,OAAMf,EAAee,GAGhBb,EAAYa,EAAS,UACzBD,EAAKE,KAAOD,EAAQC,MAC2B,IAA1CT,EAASI,EAAgBG,EAAKE,OAC3B,IAAIC,UAAWR,EAAQ,+EAAgF,OAAQE,EAAeO,KAAM,QAAUJ,EAAKE,OAGvJd,EAAYa,EAAS,gBACzBD,EAAKK,WAAaJ,EAAQI,YACpBf,EAAWU,EAAKK,aACd,IAAIF,UAAWR,EAAQ,SAAU,aAAcK,EAAKK,aAGxDjB,EAAYa,EAAS,YACzBD,EAAKM,OAASL,EAAQK,QACgC,IAAjDb,EAASK,EAAqBE,EAAKM,SAChC,IAAIH,UAAWR,EAAQ,+EAAgF,SAAUG,EAAoBM,KAAM,QAAUJ,EAAKM,SAG5J,KApBC,IAAIH,UAAWR,EAAQ,SAAUM,KC3CtCM,EAAWpB,EAAsCK,YACjDG,EAASN,EACTmB,EAAYjB,EACZkB,EAAWf,EAkHf,ICvFAgB,EDSA,SAAqBC,EAAOV,GAC3B,IAAIW,EACAC,EACAC,EACAd,EACAe,EAEJ,IAAMR,EAAUI,KAAYH,EAAWG,GACtC,MAAM,IAAIR,UAAWR,EAAQ,2EAA4EgB,IAG1G,GADAX,EAAO,GACFgB,UAAUC,OAAS,IACvBF,EAAMN,EAAUT,EAAMC,IAErB,MAAMc,EAOR,OAHAF,GADAF,EAAQO,OAAQP,IACGA,EAAMM,OAAO,GAChCL,EAAgBD,EAAMQ,OAAQ,GAErBnB,EAAKE,MACd,IAAK,KAEHY,EADc,MAAVH,EACqB,aAAhBX,EAAKM,OAAwB,KAAO,KAGpC,IAEV,MACD,IAAK,KACL,IAAK,MACJQ,EAAS,IACT,MACD,IAAK,KACL,IAAK,KACL,IAAK,KAEHA,EADoB,aAAhBd,EAAKM,OACA,IAEA,IAEV,MACD,IAAK,MAKHQ,EAHoB,OAAlBF,GAAwC,MAAdC,GACR,OAAlBD,GAAwC,MAAdC,EAEnB,KAGA,KAEV,MAED,QAEEC,EADsB,OAAlBF,GAAwC,MAAdC,EACrB,KAEkB,OAAlBD,GAAwC,MAAdC,EAC1B,KAEkB,OAAlBD,GAAwC,MAAdC,EAC1B,KAGA,KAGX,OAAKb,EAAKK,WACFS,EAEDH,EAAQG"}